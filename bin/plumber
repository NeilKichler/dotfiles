#!/usr/bin/env bash

shopt -s extglob

# Load up the clipboard
clip() { 
  printf '%s\n' "$1" | xcmenu -ic 
}

# Workaround until we have a filesystem based browser
fetch() {
  local tmp
  if [[ -f "$1" ]]; then
    tmp="$1" 
  else 
    tmp=$(mktemp)
    curl -s "$1" -o "$tmp"
  fi
  printf '%q\n' "$tmp"
}

# Fire off the action
handle() {
  local input
  while read -r input; do
    case "$input" in
      browse) exec browse               "$1" & 
              exit 0 ;;
      play)   exec play                 "$(fetch "$1")" & 
              exit 0 ;;
      view)   exec imv                  "$(fetch "$1")" & 
              exit 0 ;;
      docs)   exec zathura              "$(fetch "$1")" & 
              exit 0 ;;
      edit)   exec edit                 "$(fetch "$1")" & 
              exit 0 ;;
      hear)   mpc clear; mpc random off
              sed -e '/^#/d' < "$(fetch "$1")" | mpc add
              mpc play 
              exit 0 ;;
    esac
  done
}

# Special cases demand special handling
special() {
  case "$1" in
    *xkcd*) clip "$1" && handle view "$(curl -s "https://xkcd.com/${1//[^0-9]/}/" | awk '/hotlink/{ print $NF }')" 
            return 1 ;;  
    *youtube.com/watch*|*youtu.be*|ytdl*|*livestream.com*|*twitch.tv*|*imgur*|*webm|*mkv) clip "$1" && exec play "$1" ;;
    *ptpb.pw/t/*) clip "$1" && exec st -e asciinema play <(curl -s "${1/\/t/}") ;;
    *ptpb.pw/*/*) clip "$1" && printf '%s\n' "edit" | handle "${1%/*}" 
                  return 1 ;;
    *bpaste.net*) clip "$1" && printf '%s\n' "edit" | handle "${1/show/raw}" 
                  return 1 ;;
    gopher://*) clip "$1" && exec st -e cgo "$1" ;;
    *iotek*) clip "$1" && printf '%s\n' "browse" | handle "$1" ;; 
  esac
} 

# In testing, this outputs a correct mime
mime() {
  if [[ -f $1 ]];then 
    file -bL --mime-type "$1"
  else
    clip "$1"
    # Because fuck standardization, right?
    ctcurl "$1"
  fi
}

# Match mimetype with action to be taken
parse() {
  local out
  out=$(awk -v r="$1" '$0 ~ r { print $2 }' "$XDG_DATA_HOME/plumber/${1%\/*}")
  [[ $out ]] && printf "$out\n" || printf "$1\n" >> ~/mime_issues
}

## Main

special "$1" || exit 0

mime "$1" | while read -r mimetype; do
  case "$mimetype" in
    X-Arc*) parse "${mimetype%;*}" | handle "$1" ;;
    appli*) parse "${mimetype%;*}" | handle "$1" ;;
    video*) parse "${mimetype%;*}" | handle "$1" ;;
    audio*) parse "${mimetype%;*}" | handle "$1" ;;
    image*) parse "${mimetype%;*}" | handle "$1" ;;
    inode*) parse "${mimetype%;*}" | handle "$1" ;;
    text*)  parse "${mimetype%;*}" | handle "$1" ;;
    *) printf '%s\n' "$mimetype" >> ~/mime_issues ;;
  esac
done

## Manuals here
[[ $(apropos -f "${1%\(*}") ]] && exec "$XDG_DATA_HOME"/dsearch/man "${1%\(*}" &

## If we've gotten this far, hand it off to dsearch
