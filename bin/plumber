#!/usr/bin/env bash

shopt -s extglob

PLDIR="$XDG_DATA_HOME/plumber"

# Load up the clipboard
clip() { 
  printf '%s\n' "$1" | xcmenu -ic 
}

# Workaround until we have a filesystem based browser
fetch() {
  local link tmp
  if [[ -f "$1" ]]; then
    link="$1" 
  else
    link=$(mktemp)
    curl -Ls "$1" -o "$link" &
  fi
  printf '%b\n' "$link"
}


# Fire off the action
handle() {
  local input
  while read -r input; do
    case "$input" in
      browse) browse 	"$1" & 
              exit 0 ;;
      play)   play   	"$(fetch "$1")" & 
              exit 0 ;;
      view)   imv		"$(fetch "$1")" & 
              exit 0 ;;
      docs)   zathura   "$(fetch "$1")" & 
              exit 0 ;;
      edit)   edit      "$1" & 
              exit 0 ;;
      hear)   mpv 		"$1" &
              exit 0 ;;
      man)    "$XDG_DATA_HOME"/dsearch/man "$1" &
              exit 0 ;;
    esac
  done
}

handle_online() {
    local result
    source "$XDG_CONFIG_HOME"/dmenu/dmenucolors
    opts+=(-p "Select or enter DDG bang" -l 3)
    result="$(printf '%s\n%s\n' "$1" "!g $1" | dmenu "${opts[@]}")"
    [[ $result ]] && dsearch "$result" || exit 0
}

# In testing, this outputs a correct mime
mime() {
  if [[ -f $1 ]]; then 
    file -bL --mime-type "$1"
  elif whatis "${1/[^a-zA-Z0-9:-_\/]*/}" &>/dev/null; then
    printf "man\n"
  else
    content-type "$1" || handle_online "$1"
    clip "$1"
  fi
}

# Match mimetype with action to be taken
parse() {
  local out
  out=$(awk -v r="$1" '$0 ~ r { print $2 }' "$PLDIR/${1%\/*}")
  [[ $out ]] && printf "$out\n" || printf "$1\n" >> ~/mime_issues
}

## Main
[[ $1 ]] && input="$1" || read -r input 
[[ $input ]] && "$PLDIR"/special "$input" && exit 0

while read -r mimetype; do
  case "$mimetype" in
    X-Arc*) parse "${mimetype%;*}" | handle "$input" ;;
    appli*) parse "${mimetype%;*}" | handle "$input" ;;
    video*) parse "${mimetype%;*}" | handle "$input" ;;
    audio*) parse "${mimetype%;*}" | handle "$input" ;;
    image*) parse "${mimetype%;*}" | handle "$input" ;;
    inode*) parse "${mimetype%;*}" | handle "$input" ;;
    text*)  parse "${mimetype%;*}" | handle "$input" ;;
    man*)   printf "man\n"         | handle "$input" ;;
    *) printf '%s\n' "$mimetype" >> ~/mime_issues ;;
  esac
done < <(mime "$input")
