#!/usr/bin/env bash

shopt -s extglob

# Workaround until we have a filesystem based browser
fetch() {
  local tmp
  if [[ -f "$1" ]]; then 
    tmp="$1" 
  else tmp=$(mktemp)
    curl -s "$1" -o "$tmp"
  fi
  printf '%q\n' "$tmp"
}

# Presently redundant
handle() {
  local input
  while read -r input; do
    case "$input" in
      browse) exec browse     "$1" ;;
      play)   exec play       "$(fetch "$1")" ;;
      view)   exec imv        "$(fetch "$1")" ;;
      docs)   exec zathura    "$(fetch "$1")" ;;
      edit)   exec st -e nvim "$(fetch "$1")" ;;
      hear)   exec mpd        "$(fetch "$1")" ;;
    esac
  done
}

special() {
  case "$1" in
    *xkcd*) handle view "$(curl -s "https://xkcd.com/${1//[^0-9]/}/" | awk '/hotlink/{ print $NF }')" ;;  
    *ptpb.pw/t/*) exec st -e asciinema play <(curl -s "${1/\/t/}") ;;
    *youtube.com/watch*|*youtu.be*|ytdl*) handle watch "$1" ;;
    *livestream.com*|*twitch.tv*|*imgur*) handle watch "$1" ;;
    gopher://*) exec st -e cgo "$1" ;;
    *ptpb.pw/*/*) handle edit "${1%/*}" ;;
  esac
} 

# In testing, this outputs a correct mime
mime() {
  if [[ -f $1 ]];then 
    file -bL --mime-type "$1"
  else
    printf '%s\n' "$1" | xcmenu -ic
    curl -sI "$1" | sed -n 's/content-type: *//pi'
  fi
}

# Check the named file for a matching action for the mimetype
parse() {
  local result
  result=$(sed -n 's|'"$1"' ||pi' "$XDG_DATA_HOME/plumber/$2")
  if [[ ! $result ]]; then
    printf '%s\n%s\n' "$(mime "$1")" "$1" >> ~/mime_issues
  else
    printf '%s\n' "$result"
  fi
}

special "$1"

mime "$1" | while read -r mimetype; do
  case "$mimetype" in
    appli*) parse "$mimetype" application | handle "$1" ;;
    video*) parse "$mimetype" video       | handle "$1" ;;
    audio*) parse "$mimetype" audio       | handle "$1" ;;
    image*) parse "$mimetype" image       | handle "$1" ;;
    inode*) parse "$mimetype" inode       | handle "$1" ;;
    text*)  parse "$mimetype" text        | handle "$1" ;;
  esac
done

## NOTES: 
# inode is a directory spec on linux
