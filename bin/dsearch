#!/usr/bin/env bash
# Dmenu search with Qutebrowser history

readonly progn=dsearch
readonly confdir=${XDG_CONFIG_HOME:-$HOME/local/cfg}
readonly datadir=${XDG_DATA_HOME:-$HOME/local/share}
readonly handledir="${XDG_DATA_HOME:-$HOME/local/share}/"/dsearch
readonly optsfile="${XDG_CONFIG_HOME:-$HOME/local/cfg}"/dmenu/bemenucolors

has() {
    hash "$1" &> /dev/null
}

puts() {
    printf -- "$1\n" "${@:2}"
}

err() {
    local msg

    puts "$progn: $1" "${@:2}"

    if has notify-send; then
	msg="$(puts "$@")"
	notify-send -u critical -- "$progn" "$msg"
    fi
}

create_menu() {
    
    # Last selection
    xcmenu --list | head -n 1

    # Check bookmarks
    while read -r url name; do
        printf -- '%s %s\n' "$name" "$url"
    done < "$confdir"/vimb/bookmark

    # This is for mpv playlists
    ( cd "$XDG_DATA_HOME/mpv" || err "$XDG_DATA_HOME/mpv/ not found."
    for file in *; do
        puts "!mpv $file"
    done
    )
}

get_selection() {
    opts+=(-p Search)
    #create_menu | dmenu -l 10 "${opts[@]}"
    create_menu | bemenu -l 10 "${opts[@]}"
    #create_menu | rofi -dmenu -p "Search" -fg '#f9f5d7' -bg '#282828' -hlfg '#f9f5d7' -hlbg '#928374' -font "$font"
}

handle_results() { # args -> launch
    case "$@" in
        !radio*) exec "$handledir"/gmusic     "${1##*radio }" ;;
        # Little bit of magic to address an issue where there's no args.
        !save*)  exec "$handledir"/savepl     "${1:6}"        ;;
        !song*)  exec "$handledir"/gsong      "${1##*song }"  ;;
        !book*)  exec "$handledir"/gbook      "${1##*book }"  ;;
        !code*)  exec "$handledir"/code       "${1##*code }"  ;;
        !dict*)  exec "$handledir"/dictionary "${1##*dict }"  ;;
        !mpv*)   exec "$handledir"/mpv        "${1##*mpv }"   ;;
        !man)    exec "$handledir"/manual ;;
        !man*)   exec "$handledir"/manual     "${1##*man }"   ;;
        !pl*)    exec "$handledir"/playlist   "${1##*pl }"    ;;
        !ps*)    exec "$handledir"/savesearch "${1##*ps }"    ;;
        !yt*)    exec "$handledir"/yt         "${1##*yt }"    ;;
        *)       exec vimb-run                "$1"            ;;
    esac
}

# Main
# https://github.com/halfwit/dotfiles/blob/master/.config/dmenu/font
if [[ -s $confdir/dmenu/font ]]; then
    read -r font < "$confdir"/dmenu/font
fi

if [[ $font ]]; then
    opts+=(-fn "$font")
fi

if [[ -s $optsfile ]]; then
    source "$optsfile"
fi

query=$(get_selection)
query=${query/*http/http}

# If no selection is made, exit (escape pressed, e.g.)
[[ ! $query ]] && exit 0

handle_results "$query"
