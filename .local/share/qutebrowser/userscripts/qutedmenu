#!/usr/bin/env bash
# Handle open -s && open -t with bemenu

# Broken out to two files to handle flag passing
#:bind o spawn --userscript /path/to/userscripts/openpage
#:bind O spawn --userscript /path/to/userscripts/qutedmenu

# If you would like to set a custom colorscheme/font use these dirs.
# https://github.com/halfwit/dotfiles/blob/master/.config/dmenu/bemenucolors
readonly optsfile="${XDG_CONFIG_HOME:-$HOME/.config}"/dmenu/bemenucolors

# https://github.com/halfwit/dotfiles/blob/master/.config/dmenu/font
if [[ -e "${XDG_CONFIG_HOME:-$HOME/.config}"/dmenu/font ]]; then
    read -r font < "${XDG_CONFIG_HOME:-$HOME/.config}"/dmenu/font
fi

get_options() {
    if [[ -e "$font" ]]; then
        opts+=( -fn "$font" )
    fi

    if [[ -e "$optsfile" ]]; then
        source "$optsfile"
    fi
}

create_menu() {
    # Check quickmarks
    while read -r url; do
        printf -- '%s\n' "$url"
    done < "${XDG_CONFIG_HOME:-$HOME/.config}"/qutebrowser/quickmarks

    # Next bookmarks
    while read -r url _; do
        printf -- '%s\n' "$url"
    done < "${XDG_CONFIG_HOME:-$HOME/.config}"/qutebrowser/bookmarks/urls

    # Finally history
    while read -r _ url; do
        printf -- '%s\n' "${url}"
    done < "${XDG_DATA_HOME:-$HOME/.local/share}"/qutebrowser/history
    }

get_selection() {
    opts+=( -p "Qutebrowser" )
    #create_menu | dmenu -l 10 "${opts[@]}"
    create_menu | bemenu -l 10 "${opts[@]}"
}

# Main

get_options

url="$(get_selection)"
url="${url/*http/http}"

if [[ $1 == "open" && $url ]]; then
    printf '%s' "open $url" >> "$QUTE_FIFO" || qutebrowser "$url"
elif [[ $url ]]; then
    printf '%s' "open -t $url" >> "$QUTE_FIFO"
fi

