#!/usr/bin/env bash
# Script to iterate over and build files from AUR and ASP.
# Make sure $LOGDEST is set.
readonly progn=builder
readonly reposeroot=$HOME/build/packages
readonly aurroot=$HOME/build/aur
readonly asproot=$HOME/build/asp
readonly logroot=$HOME/build/logs

opts=( -s -c )

puts() {
    printf -- "$1\n" "${@:2}"
}

has() {
    hash "$1" &> /dev/null
}

err() {
    local msg

    puts "$progn: $1" "${@:2}" >&2

    if has notify-send; then
        msg="$(puts "$@")"
        notify-send -u critical -- "$progn" "$msg"
    fi
}

get_options() {
    if [[ $1 == "f" ]]; then
        opts+=( -f )
    fi
    if [[ $1 == "g" ]]; then
        opts+=( -g )
    fi
}

# Enter each dir and build
builddir() {

    cd "$1" || err "Unable to enter $1"
    for i in *; do
        (cd "$i" && BUILDIR=$(mktemp -d) makepkg "${opts[@]}" 2>&1 | tee "$logroot"/$i.log)
    done
}

error_test() {
    cd "$logroot" || err "Error entering $logroot"
    for i in *; do
        if sed -n '/has already been built/q1' "$i"; then
	    puts "${i/.log/ updated}"
	fi
    done
}

update_repo() {
    cd "$reposeroot" || err "Error entering $reposeroot"
    repose -z custom
}

## Main ##
# Check for command line arguments
get_options "$@"

# Build!
builddir "$aurroot"; builddir "$asproot"

# Finally, test for any package that built.
error_test

# Update repose
update_repo
