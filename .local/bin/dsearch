#!/usr/bin/env bash
# Dmenu search 

readonly progn=dsearch
readonly optsfile="${XDG_CONFIG_HOME:-$HOME/.config}"/dmenu/bemenucolors

has() {
	hash "$1" &> /dev/null
}

puts() {
	printf -- "$1\n" "${@:2}"
}

err() {
	local msg

    puts "$progn: $1" "${@:2}"

	if has notify-send; then
		msg="$(puts "$@")"
		notify-send -u critical -- "$progn" "$msg"
	fi
}

handle_results() { # args -> launch
	case "$1" in
        !yt*) "$HOME"/.local/bin/ythandler "${1:4}" ;;
        !playlist*) "$HOME"/.local/bin/playlisthandler "${1:10}" ;;
        !radio*) "$HOME"/.local/bin/gmusichandler "${1:7}" ;;    
        !song*) "$HOME"/.local/bin/gsonghandler "${1:6}" ;;
        !book*) "$HOME"/.local/bin/gbookhandler "${1:6}" ;;
        !aw*) qutebrowser https://wiki.archlinux.org/?search="${1:4}" ;;
        *) qutebrowser "$1" ;; 
	esac
	exit 0
}

get_options() {
    if [[ -e "$optsfile" ]]; then
        # Parse optsfile
        read -r font < "${XDG_CONFIG_HOME:-$HOME/.config}"/dmenu/font
        if [[ ! "$font" ]]; then
            err "No font found in ${XDG_CONFIG_HOME:-$HOME/.config}/dmenu/font"
        fi
        source "$optsfile"
        opts+=( -p "Search" )
    else 
        err "No configuration found for dmenu in ${XDG_CONFIG_HOME:-$HOME/.config}/dmenu/bemenucolors"
    fi
}
get_options
query="$(echo | bemenu "${opts[@]}" )"

if [[ "$query" ]]; then
	handle_results "$query"
else
	err "Usage = <g|yt|gi> <string>"
	exit 1read
fi

