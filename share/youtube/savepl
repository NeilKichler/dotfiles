#!/usr/bin/env bash
# Appends to playlists, or creates new ones.

readonly datadir=${XDG_DATA_HOME:-$HOME/local/share}/mpv
readonly optsfile="${XDG_CONFIG_HOME:-$HOME/local/cfg}"/dmenu/bemenucolors

create_menu() {
    cd "$datadir" || exit 1
    for file in *; do
        printf '%s\n' "$file"
    done 
}

append_selection() {
    opts+=( -l 10 -p "Append to: ")
    create_menu | bemenu "${opts[@]}"
}

fetch_number() {
    declare -i number
    local v k
    while IFS='=' read -r k v; do
        case "$k" in
            NumberOfEntries*)
                number="$v" ;;
        esac
    done < "$1"
    printf '%s' "$(( number=number + 1))"
}

fetch_path() {
    echo '{ "command": ["get_property", "path"] } ' | socat - /tmp/mpvsock
}

fetch_title(){
    echo '{ "command": ["get_property", "media-title"] } ' | socat - /tmp/mpvsock
}


# Main

[[ -s $optsfile ]] && source "$optsfile"

current="$(fetch_path "path"| jshon -e data -u)"
title="$(fetch_title "media-title" | jshon -e data -u)"
title=$(printf '%s' "$title" | bemenu -l 1 "${opts[@]}" -p "Title")
file=$(append_selection)

if [[ ! -s "$datadir/$file" ]]; then
    file="$file".pls
    (cd "$datadir" || exit 1
    printf '%s\n%s' "[playlist]" "NumberOfEntries=0" > "$file")
fi

number=$(fetch_number "$datadir/$file")

# Make sure we have a selection
if [[ $file && $current && $title && $number ]]; then
    (cd "$datadir" || exit 1
    sed -i '/NumberOfEntries=[0-9]*[0-9]/d' "$file"
    printf -- '%s\n%s\n%s\n' "Title$number=$title" "File$number=${current/*v=/ytdl:\/\/}" "NumberOfEntries=$number" >> "$file")
fi
