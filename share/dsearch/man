#!/usr/bin/env bash
## Find manuals

readonly optsfile="$XDG_CONFIG_HOME"/dmenu/dmenucolors

handle_result() {
   local width
   #Coloration, and match width
   width=$(tput cols)
   [[ $width -gt $MANWIDTH ]] && \
   exec env LESS=-RX \
   MANWIDTH="$width" \
   LESS_TERMCAP_mb=$'\E[01;31m' \
   LESS_TERMCAP_md=$'\E[01;38;5;74m' \
   LESS_TERMCAP_me=$'\E[0m' \
   LESS_TERMCAP_se=$'\E[0m' \
   LESS_TERMCAP_so=$'\E[38;5;246m' \
   LESS_TERMCAP_ue=$'\E[0m' \
   LESS_TERMCAP_us=$'\E[04;38;5;146m' \
   st -t float -e man "$1" "$2"
}

menu() {
  thingmenu -g  160x150 -x \
    "Posix" "exec browse '\!posix $1'" \
    "Mankier" "exec browse '\!mankier $1'" \
    "Man7" "exec browse '\!man7 $1'" \
    "Man" "exec browse '\!man $1'" \
    "Mandoc" "exec browse '\!mandoc $1'"
}

## Main ##

[[ -s $optsfile ]] && source "$optsfile"
opts+=(-l 10 -p "Select manual")

# No string passed in; search all
[[ ! $1 ]] && result="$(apropos . | dmenu "${opts[@]}")"

# Strip `(` from input
[[ $1 ]] && result="$(apropos "${1%\(*}")"

# Clarify ambiguity
if [[ $(wc -l <<< "$result") > 1 ]]; then
  result=$(dmenu "${opts[@]}" <<< "$result")
fi

if [[ $result ]]; then
  handle_result "${result//[a-zA-Z\(\)-_]/}" "${result%\(*}"
else
  menu "$1"
fi
