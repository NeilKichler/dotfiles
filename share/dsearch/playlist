#!/usr/bin/env bash
# Youtube playlist search handler

readonly progn=playlisthandler
readonly optsfile="$XDG_CONFIG_HOME"/dmenu/dmenucolors

# For Json
readonly TMPDIR="${TMPDIR:-/tmp}"

# Number of results to fetch
readonly lines=50

has() { # string -> bool
    hash "$1" &> /dev/null
}

puts() { # strings -> stdout
	printf -- "$1\n" "${@:2}"
}

err() { # strings -> stderr
    local msg
    puts "$progn: $1" "${@:2}"  >&2

    if has notify-send; then
        msg="$(puts "$@")"
        notify-send -u critical -- "$progn" "$msg"
    fi
}

fetch_json() {
    curl -s "https://www.googleapis.com/youtube/v3/search?q="${1// /%20}"&type=playlist&part=snippet&maxResults=$lines&key=$KEY" > "$TMPDIR"/ytsearch.json
}

parse_json() {
	# we need to pull out the URL in this same call, to stdout.
    jshon -CQ -e items -a -e snippet -e title -uppe id -e playlistId -uppe snippet -e thumbnails -e high -e url < "$TMPDIR"/ytsearch.json
}

create_menu() {
    # globals are menu and image
    local key
    for key in "${!menu[@]}"; do
	    # iterate through keys
        puts 'IMG:%s\t%s' "$TMPDIR/${menu[$key]}.jpg" "$key"
    done
}

get_selection() {
    opts+=( -p "Select Video" )
    create_menu | dmenu "${opts[@]}"
}

fetch_image() { # global image, token
    # Dereference with token to pull url to fetch
    curl -s "${image[$1]}" > "$TMPDIR/$1".jpg
}

populate_menu() {
	while {
        read -r title
        read -r token
        read -r jpg
	} do
        jpg="${jpg//\\/}" jpg="${jpg//\"/}"
        if [[ "$title" != null ]]; then
            menu["$title"]="$token"
            image["$token"]="$jpg"
        fi
        fetch_image "$token" &
    done
}

process_selection() { # global token
	local id title
    while read -r title; do
        [[ -z "$title" ]] && title="$id"
        if [[ "${menu[$title]}" ]]; then
            url="${menu[$title]//\"/}"
        else
            err '%s: Cannot find video.' "$title"
            exit 1
        fi
        if [[ ! -e /tmp/mpvsocket ]]; then
            touch /tmp/mpvsocket
        fi
    done
    # These are for possible saving of playlist later
    printf '%s' "$url" > /tmp/tmpplaylist
    printf '%s' "$title" > /tmp/tmptitle
    rm /tmp/*.jpg
    exec mpv-run https://www.youtube.com/watch?list="$url"

}


# Main
declare -A menu title image

[[ "$1" == save ]] && exec "$HOME"/local/share/dsearch/savesearch

[[ -s $optsfile ]] && source "$optsfile"

fetch_json "$@"

populate_menu < <(parse_json)
wait
results="$(get_selection)"
if [[ "$results" ]]; then
    process_selection <<< "$results"
fi
