#!/usr/bin/env bash

# Database of bookmarks for quick linking
readonly optsfile=$XDG_CONFIG_HOME/dmenu/dmenucolors
readonly datadir="$XDG_DATA_HOME"
readonly pics="$HOME"/media/pictures

list() {
  find "$datadir"/bookmark -type f -not -path '*/\.*'
  find "$datadir"/mpv -type f -not -path '*/\.*'
  find "$pics" -type f -not -path '*/\.*'
}

build() {
  local input
  while read -r input; do
    case "$input" in
      *bookmark*)
        read -r url < "$input"
        printf '%s\n' "${input##*bookmark\/}"
        ;;
      *mpv*)
        input="${input/.pls/}"
        printf '%s\n' "video - ${input##*mpv\/}"
        ;;
      *pictures*) 
        printf 'IMG:%q\t%s\n' "$pic/$input" "image - ${input##*pictures\/}"
        ;;
    esac
  done
}

video() {
  local result
  lnk=$(sed -n -e 's/^Title[0-9]=//p' < "$datadir/mpv/${1##*-\ }.pls" | dmenu "${opts[@]}" -p "Select title") 
  
  # If no selection is made, return to this program
  [[ ! $lnk ]] && exec "$datadir/dsearch/link"
  
  sed -n -e "/$lnk/ { n; s/^File[0-9]=//p }" < "$datadir/mpv/${1#*-\ }.pls"
}

[[ -s $optsfile ]] && source "$optsfile"

opts+=( -l 10 -p "Select bookmark" )
lnk=$(list | sort -u | build | dmenu "${opts[@]}")

case $lnk in
  video*) lnk="$(video "$lnk")" ;;
  image*) lnk="$(exiftool "$pics/${lnk#*-\ }" | awk '/^Comment/ { print $NF }')" ;;
  *) read -r lnk < "$datadir/bookmark/$lnk"
esac

[[ $lnk ]] && exec xcmenu -ic "$lnk"
