#!/usr/bin/env bash
# Code search using bemenu (single string)
# Requires bemenu, tree, neovim, and python

readonly confdir=${XDG_CONFIG_HOME:-$HOME/local/cfg}
readonly optsfile=$confdir/dmenu/bemenucolors
readonly terminal=/usr/bin/termite

# Whilelist of locations to search
readonly locations=( ~/programming \
                     ~/local/cfg     \
                     ~/local/bin
);

get_selection() {
    grep -Iri "$1" "${locations[@]}" | bemenu -l 10 "${opts[@]}" -p "Edit"
}

handle_result() {

    local result="$1"

    # If no neovim is running, start
    if ! pgrep nvim; then
        export NVIM_LISTEN_ADDRESS=/tmp/nvimsocket
        exec $terminal --exec="/usr/bin/nvim $result" &
    else

# Connect to the running neovim instance
python - <<END
from neovim import attach
nvim = attach('socket', path='/tmp/nvimsocket')
nvim.command('e $result')
END

fi
}

# Main

# Configuration
# https://github.com/halfwit/dotfiles/blob/master/.config/dmenu/font
if [[ -s $confdir/dmenu/font ]]; then
    read -r font < "$confdir"/dmenu/font
fi

if [[ $font ]]; then
    opts+=(-fn "$font")
fi

if [[ -s $optsfile ]]; then
    source "$optsfile"
fi

# Chain multiple arguments like.*this for grep
token="$*"
result=$(get_selection "${token// /.\*}")

# Verify a selection was made
if [[ $result ]]; then
    handle_result "${result%:*}"
fi
