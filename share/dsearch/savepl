#!/usr/bin/env bash
# Appends to playlists, or creates new ones.

readonly confdir=${XDG_CONFIG_HOME:-$HOME/local/cfg}
readonly datadir=${XDG_DATA_HOME:-$HOME/local/share}
readonly optsfile="${XDG_CONFIG_HOME:-$HOME/local/cfg}"/dmenu/bemenucolors

create_menu() {
    ( cd "$datadir"/mpv || exit 1
    for i in *; do
        echo "$i"
    done
    )
}

append_selection() {
    create_menu | bemenu -l 10 "${opts[@]}" -p "Append to"
}

fetch_number() {
    declare -i number
    local v k
    while IFS='=' read -r k v; do
        case "$k" in
            NumberOfEntries*)
                number="$v" ;;
        esac
    done < "$1"
    echo $(( number=number + 1))
}

fetch_path() {
    echo '{ "command": ["get_property", "path"] } ' | socat - /tmp/mpvsocket
}

fetch_title(){
    echo '{ "command": ["get_property", "media-title"] } ' | socat - /tmp/mpvsocket
}

parse_json() {
    echo "$1" | jshon -CQ -e data
}

unwrap_json() {
    local value
    value=$(parse_json "$1")
    value="${value//\\\///}"
    value="${value//\"/}"
    printf -- '%b' "$value"
}

# Main
# https://github.com/halfwit/dotfiles/blob/master/.config/dmenu/font

if [[ -s $confdir/dmenu/font ]]; then
    read -r font < "$confdir"/dmenu/font
fi

if [[ $font ]]; then
    opts+=(-fn "$font")
fi

if [[ -s $optsfile ]]; then
    source "$optsfile"
fi

current=$(fetch_path "path")
current=$(unwrap_json "$current")

title=$(fetch_title "media-title")
title=$(unwrap_json "$title")

if [[ "$1" ]]; then
    file="$1.pls"
    (cd "$datadir"/mpv || exit 1
    printf '%s' "[playlist]\nNumberOfEntries=0" > "$file")
else
    file=$(append_selection)
fi

number=$(fetch_number "$datadir/mpv/$file")

# Make sure we have a selection
if [[ $file && $current && $title && $number ]]; then
    (cd "$datadir"/mpv || exit 1
    sed -i '/NumberOfEntries=[0-9]*[0-9]/d' "$file"
    printf -- '%s\n%s\n%s\n' "Title$number=$title" "File$number=${current/*v=/ytdl:\/\/}" "NumberOfEntries=$number" >> "$file")
fi
